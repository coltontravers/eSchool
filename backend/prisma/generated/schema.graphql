### This file was generated by Nexus Schema
### Do not make changes to this file directly


type classroom {
  grade: Int!
  id: Int!
  name: String!
  teacher: String!
  time: String!
}

input classroomCreateInput {
  grade: Int!
  grades: gradeCreateManyWithoutClassroomInput
  name: String!
  teacher: String!
  time: String!
}

input classroomWhereInput {
  AND: [classroomWhereInput!]
  grade: IntFilter
  grades: GradeListRelationFilter
  id: IntFilter
  name: StringFilter
  NOT: [classroomWhereInput!]
  OR: [classroomWhereInput!]
  teacher: StringFilter
  time: StringFilter
}

input classroomWhereUniqueInput {
  id: Int
}

type event {
  id: Int!
  user_id: Int
}

input gradeCreateManyWithoutClassroomInput {
  connect: [gradeWhereUniqueInput!]
  create: [gradeCreateWithoutClassroomInput!]
}

input gradeCreateWithoutClassroomInput {
  grade: Int!
  name: String!
}

input GradeListRelationFilter {
  every: gradeWhereInput
  none: gradeWhereInput
  some: gradeWhereInput
}

input gradeWhereInput {
  AND: [gradeWhereInput!]
  classroom: classroomWhereInput
  classroom_id: IntNullableFilter
  grade: IntFilter
  id: IntFilter
  name: StringFilter
  NOT: [gradeWhereInput!]
  OR: [gradeWhereInput!]
}

input gradeWhereUniqueInput {
  id: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createOneclassroom(data: classroomCreateInput!): classroom!
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  classroom(where: classroomWhereUniqueInput!): classroom
  classrooms(after: classroomWhereUniqueInput, before: classroomWhereUniqueInput, first: Int, last: Int, where: classroomWhereInput): [classroom!]!
}

enum QueryMode {
  default
  insensitive
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}
